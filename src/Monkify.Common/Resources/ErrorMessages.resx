<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdviceOnDifferentSignatureBetAmount" xml:space="preserve">
    <value>If you requested a transaction and it has a different amount than you desired. You can request a refund for the transaction sending an email with your wallet and signature to {0}</value>
  </data>
  <data name="BetCannotReceiveRefund" xml:space="preserve">
    <value>Bet is not in the status to receive refund.</value>
  </data>
  <data name="BetCannotReceiveReward" xml:space="preserve">
    <value>Bet has not won, therefore cannot receive a reward for this session.</value>
  </data>
  <data name="BetHasAlreadyBeenRefunded" xml:space="preserve">
    <value>Bet has already been refunded.</value>
  </data>
  <data name="BetHasAlreadyBeenRewarded" xml:space="preserve">
    <value>Bet has already been rewarded.</value>
  </data>
  <data name="BetRewardBiggerThanThePot" xml:space="preserve">
    <value>Bet reward cannot be bigger than the pot.</value>
  </data>
  <data name="FailedToRegisterBet" xml:space="preserve">
    <value>The system could not register this bet at the moment, please try again later.</value>
  </data>
  <data name="InvalidPaymentSignature" xml:space="preserve">
    <value>The requested payment signature is not valid. Please check the data and try again.</value>
  </data>
  <data name="ParameterHasNoActiveSessions" xml:space="preserve">
    <value>The requested session type has no active sessions. Please refresh your browser and try again.</value>
  </data>
  <data name="ParameterNotFound" xml:space="preserve">
    <value>The requested session type was not found. Please check the request and try again.</value>
  </data>
  <data name="PaymentSignatureHasBeenUsed" xml:space="preserve">
    <value>The requested payment signature has already been used. Make another transaction with the appropriate amount.</value>
  </data>
  <data name="SessionNotValidForBets" xml:space="preserve">
    <value>The requested session was not found or is not receiving bets at the current moment.</value>
  </data>
  <data name="SessionWithNoBets" xml:space="preserve">
    <value>Session has no bets.</value>
  </data>
  <data name="SessionWithoutWinners" xml:space="preserve">
    <value>There are no winners in this session. Transfers cannot be made.</value>
  </data>
  <data name="SignatureForInvalidToken" xml:space="preserve">
    <value>The requested payment signature was not sent for the appropriate token. Please try sending a valid transaction.</value>
  </data>
  <data name="SignaturePaidLessThanBetAmount" xml:space="preserve">
    <value>The requested payment signature has sent less tokens than informed in the request. </value>
  </data>
  <data name="SignaturePaidMoreThanBetAmount" xml:space="preserve">
    <value>The requested payment signature has sent more tokens than informed in the request. </value>
  </data>
  <data name="SignatureWithoutBetAccount" xml:space="preserve">
    <value>The requested payment signature have not sent tokens from the request wallet. Please try sending a valid transaction.</value>
  </data>
  <data name="SignatureWithoutOwnerAccount" xml:space="preserve">
    <value>The requested payment signature have not sent tokens to our accounts. Please try sending a valid transaction.</value>
  </data>
  <data name="TyperStartedWithoutBets" xml:space="preserve">
    <value>At least one bet must be made to start a session. Session has ended</value>
  </data>
</root>